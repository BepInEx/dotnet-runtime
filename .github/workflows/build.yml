name: Build

on: push

jobs:
  build-win:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86, x64]
    steps:
      - uses: actions/checkout@v2.3.5
      - name: Build
        shell: bash
        run: |
          ./build.sh clr.runtime+clr.corelib+libs -c release -lc release -a ${{ matrix.arch }}
      - name: Collect final build
        shell: bash
        run: |
          mkdir -p artifacts/ci/windows-${{ matrix.arch }}
          cp artifacts/bin/coreclr/windows.${{ matrix.arch }}.Release/{clretwrc,clrgc,clrjit,coreclr,dbgshim,jitinterface_${{ matrix.arch }},mscordaccore,mscordbi,mscorrc}.dll artifacts/ci/windows-${{ matrix.arch }}/
          cp artifacts/bin/coreclr/windows.${{ matrix.arch }}.Release/IL/System.Private.CoreLib.dll artifacts/ci/windows-${{ matrix.arch }}/
          mkdir -p artifacts/ci/windows-${{ matrix.arch }}/corlib
          cp artifacts/bin/runtime/net6.0-windows-Release-${{ matrix.arch }}/*.dll artifacts/ci/windows-${{ matrix.arch }}/corlib/
      - uses: actions/upload-artifact@v2
        with:
          name: mini-coreclr
          path: |
            artifacts/ci/

  build-macos-x64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2.3.5
      - name: Build
        shell: bash
        run: |
          ./build.sh clr.runtime+clr.corelib+libs -c release -lc release -a x64
      - name: Collect final build
        shell: bash
        run: |
          mkdir -p artifacts/ci/macos-x64
          cp artifacts/bin/coreclr/OSX.x64.Release/lib{clrgc,clrjit,coreclr,dbgshim,jitinterface_x64,mscordaccore,mscordbi}.dylib artifacts/ci/macos-x64/
          cp artifacts/bin/coreclr/OSX.x64.Release/IL/System.Private.CoreLib.dll artifacts/ci/macos-x64/
          mkdir -p artifacts/ci/macos-x64/corlib
          cp artifacts/bin/runtime/net6.0-OSX-Release-x64/*.{dll,dylib} artifacts/ci/macos-x64/corlib/
      - uses: actions/upload-artifact@v2
        with:
          name: mini-coreclr
          path: |
            artifacts/ci/

  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.5
      - name: Install build tools
        run: |
          sudo apt install -y libkrb5-dev liblttng-ust-dev
      - name: Build
        run: |
          ./build.sh clr.runtime+clr.corelib+libs -c release -lc release -a x64
      - name: Collect final build
        run: |
          mkdir -p artifacts/ci/linux-x64
          cp artifacts/bin/coreclr/Linux.x64.Release/lib{clrgc,clrjit,coreclr,dbgshim,jitinterface_x64,mscordaccore,mscordbi}.so artifacts/ci/linux-x64/
          cp artifacts/bin/coreclr/Linux.x64.Release/IL/System.Private.CoreLib.dll artifacts/ci/linux-x64/
          mkdir -p artifacts/ci/linux-x64/corlib
          cp artifacts/bin/runtime/net6.0-Linux-Release-x64/*.{dll,so} artifacts/ci/linux-x64/corlib/
      - uses: actions/upload-artifact@v2
        with:
          name: mini-coreclr
          path: |
            artifacts/ci/

  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.5
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt install -y libkrb5-dev liblttng-ust-dev debootstrap qemu-user-static qemu clang-9 libclang-9-dev llvm-9-dev
      - name: Build
        run: |
          . /etc/os-release
          sudo ./eng/common/cross/build-rootfs.sh x86 $VERSION_CODENAME
          ROOTFS_DIR=`pwd`/.tools/rootfs/x86 ./build.sh --cross --clang9 --arch x86 --runtimeConfiguration Release --librariesConfiguration Release --subset clr.runtime+clr.corelib+libs
      - name: Collect final build
        run: |
          mkdir -p artifacts/ci/linux-x86
          cp artifacts/bin/coreclr/Linux.x86.Release/lib{clrgc,clrjit,coreclr,dbgshim,jitinterface_x86,mscordaccore,mscordbi}.so artifacts/ci/linux-x86/
          cp artifacts/bin/coreclr/Linux.x86.Release/IL/System.Private.CoreLib.dll artifacts/ci/linux-x86/
          mkdir -p artifacts/ci/linux-x86/corlib
          cp artifacts/bin/runtime/net6.0-Linux-Release-x86/*.{dll,so} artifacts/ci/linux-x86/corlib/
      - uses: actions/upload-artifact@v2
        with:
          name: mini-coreclr
          path: |
            artifacts/ci/
